---
// Ensure this page is rendered on-demand (SSR)
export const prerender = false;

// Framework
import Layout from '@/layouts/Layout.astro';
import { actions } from 'astro:actions';

// Components
import SetupForm from '@/components/setup/SetupForm.astro';

// Database
import { db, settings } from '@/db';
import { eq } from 'drizzle-orm';
import { logger } from '@/lib/security';

// Get and validate setup token
const token = Astro.url?.searchParams.get('token') ?? null;
if (!token || token !== import.meta.env.SETUP_TOKEN) {
    return Astro.redirect('/error?message=Invalid setup token');
}

// Check if already configured
const adminExists = await db.query.settings.findFirst({
    where: eq(settings.key, 'admin_password_hash')
});

if (adminExists) {
    return Astro.redirect('/');
}

// Check action result first
const result = Astro.getActionResult(actions.setup.configure);
if (result?.success && result.data?.redirectTo) {
    return Astro.redirect(result.data.redirectTo);
}

// Handle form submission
let error: string | undefined;
let message: string | undefined;

if (Astro.request.method === 'POST') {
    const formData = await Astro.request.formData();
    formData.append('token', token);
    await actions.setup.configure(formData);
} else if (result?.error) {
    error = result.error;
}

// Get CSRF token from middleware
const csrfToken = Astro.locals.csrfToken;
---

<Layout title="Setup - Dokku Admin">
    <main>
        <SetupForm 
            error={error} 
            message={message}
            csrfToken={csrfToken}
            token={token}
        />
    </main>
</Layout>

<style>
    main {
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        background: #f5f6fa;
    }
</style>